#!/usr/bin/env bash
set -ex

# Setup alias and environment variables
mkdir -p /home/nanodisco # Will become HOME and WORKDIR
touch /home/nanodisco/.bashrc
{
    echo 'alias ls="ls --color=auto"'
    echo 'alias ll="ls -hla"'
    echo 'get_data_bacteria (){ wget --show-progress https://nanodiscodata.s3.us-east-2.amazonaws.com/data_bacteria.tar.gz && tar -zxf data_bacteria.tar.gz -C /home && rm data_bacteria.tar.gz ;}'
    echo 'get_data_microbiome (){ wget --show-progress https://nanodiscodata.s3.us-east-2.amazonaws.com/data_microbiome.tar.gz && tar -zxf data_microbiome.tar.gz -C /home && rm data_microbiome.tar.gz ;}'
    echo 'export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]nanodisco:\[\033[33;1m\]\w\[\033[m\]$ "' # Prettify prompt
    echo 'export OMPI_MCA_btl_base_warn_component_unused=0' # Hide common OpenMPI warning
} >> /home/nanodisco/.bashrc

# Add nanodisco in $PATH
ln -s /home/nanodisco/code/nanodisco /usr/bin/nanodisco
# Change permission
mkdir -p /home/nanodisco/code # Will contain all nanodisco code (main exec, wrapper, and script)
find /home/nanodisco/code -type f -exec chmod 755 {} \;

# Retrieve typing and fine-mapping models
wget -q https://nanodiscodata.s3.us-east-2.amazonaws.com/data_default.tar.gz
tar -zxf data_default.tar.gz -C /home && rm data_default.tar.gz

# Install Nanopolish version 0.14.0
git clone --recursive -b v0.14.0 https://github.com/jts/nanopolish.git nanopolish
cd nanopolish

# Edit Makefile to update dead link
# sed -i -e 's@\-e $(EIGEN_VERSION).tar.bz2@\-e eigen-$(EIGEN_VERSION).tar.bz2@g' Makefile
# sed -i -e 's@wget http://bitbucket.org/eigen/eigen/get/$(EIGEN_VERSION).tar.bz2@wget https://gitlab.com/libeigen/eigen/\-/archive/$(EIGEN_VERSION)/eigen-$(EIGEN_VERSION).tar.bz2@g' Makefile
# sed -i -e 's@tar \-xjf $(EIGEN_VERSION).tar.bz2@tar \-xjf eigen-$(EIGEN_VERSION).tar.bz2@g' Makefile
# sed -i -e 's@mv eigen\-eigen\-\* eigen@mv eigen\-$(EIGEN_VERSION) eigen@g' Makefile

# Unable vbz reading for nanopolish from https://github.com/jts/nanopolish/issues/932
wget https://github.com/nanoporetech/vbz_compression/releases/download/v1.0.1/ont-vbz-hdf-plugin-1.0.1-Linux-x86_64.tar.gz
tar -xzf ont-vbz-hdf-plugin-1.0.1-Linux-x86_64.tar.gz
echo 'export HDF5_PLUGIN_PATH=/nanopolish/ont-vbz-hdf-plugin-1.0.1-Linux/usr/local/hdf5/lib/plugin' >> /home/nanodisco/.bashrc # For sandbox only

# Resume Nanopolish install
make
cp nanopolish /usr/bin/nanopolish
cp etc/r9-models/r9.4_450bps.nucleotide.6mer.template.model /usr/bin/r9.4_450bps.nucleotide.6mer.template.model

cd ..

# Install minimap2
git clone -b v2.24 https://github.com/lh3/minimap2
cd minimap2
make
cp minimap2 /usr/bin/minimap2

cd ..

# Install bwa version 0.7.17
# wget https://github.com/lh3/bwa/releases/download/v0.7.17/bwa-0.7.17.tar.bz2
# tar xf bwa-0.7.17.tar.bz2 && rm bwa-0.7.17.tar.bz2
# cd bwa-0.7.17
# make
# cp bwa /usr/bin/bwa

# cd ..

# Install samtools version 1.15.1
wget https://sourceforge.net/projects/samtools/files/samtools/1.15.1/samtools-1.15.1.tar.bz2
tar xf samtools-1.15.1.tar.bz2 && rm samtools-1.15.1.tar.bz2
cd samtools-1.15.1
make
cp samtools /usr/bin/samtools 

cd ..

git clone --depth=1 -b v1.0.0 https://github.com/libgit2/libgit2.git /libgit2_src \
    && cd /libgit2_src \
    && cmake . -DBUILD_CLAR=OFF -DCMAKE_BUILD_TYPE=Release -DEMBED_SSH_PATH=/libssh2_src -DCMAKE_INSTALL_PREFIX=/libgit2 \
    && cmake --build . --target install \
    && cp -r /libgit2/* /usr/bin \
    && cp -r /libgit2/* /usr/local

cd ..

# Prepare for installing R packages
echo "options(repos = 'https://cran.rstudio.com/', \
  unzip = 'internal', \
  download.file.method = 'libcurl', \
  Ncpus = parallel::detectCores() )" >> /usr/local/lib/R/etc/Rprofile.site #  /etc/R/Rprofile.site

# Packages managers for R
Rscript -e "Sys.setenv(TAR = '/bin/tar'); \
    install.packages('devtools'); \
    install.packages('BiocManager'); \
"

# Packages for processing
Rscript -e "Sys.setenv(TAR = '/bin/tar'); \
    devtools::install_version('data.table', version='1.14.2', upgrade='never'); \
    devtools::install_version('stringr', version='1.4.0', upgrade='never'); \
    devtools::install_version('optparse', version='1.7.1', upgrade='never'); \
    devtools::install_version('doMC', version='1.3.8', upgrade='never'); \
    devtools::install_version('foreach', version='1.5.2', upgrade='never'); \
    devtools::install_version('iterators', version='1.0.14', upgrade='never'); \
    BiocManager::install('GenomicRanges', version='3.14', update=FALSE); \
    BiocManager::install('Rsamtools', version='3.14', update=FALSE); \
    devtools::install_version('pillar', version='1.7.0', upgrade='never'); \
    devtools::install_version('bindrcpp', version='0.2.2', upgrade='never'); \
    devtools::install_version('dplyr', version='1.0.9', upgrade='never'); \
    BiocManager::install('GenomicAlignments', version='3.14', update=FALSE); \
    devtools::install_version('plyr', version='1.8.7', upgrade='never'); \
    devtools::install_version('MASS', version='7.3-57', upgrade='never'); \
    devtools::install_version('tidyr', version='1.2.0', upgrade='never'); \
    devtools::install_version('doFuture', version='0.12.2', upgrade='never'); \
    devtools::install_version('progressr', version='0.10.0', upgrade='never'); \
"

# Packages for analysis
Rscript -e "Sys.setenv(TAR = '/bin/tar'); \
    devtools::install_version('seqinr', version='4.2-8', upgrade='never'); \
    devtools::install_version('gtable', version='0.3.0', upgrade='never'); \
    devtools::install_version('scales', version='1.2.0', upgrade='never'); \
    devtools::install_version('ggplot2', version='3.3.6', upgrade='never'); \
    devtools::install_version('egg', version='0.4.5', upgrade='never'); \
    devtools::install_version('RColorBrewer', version='1.1-3', upgrade='never'); \
    devtools::install_version('zoo', version='1.8-10', upgrade='never'); \
    BiocManager::install('multtest', version='3.14', upgrade='never'); \
    devtools::install_version('qqconf', version='1.2.3', upgrade='never'); \
    devtools::install_version('metap', version='1.8', upgrade='never'); \
    devtools::install_version('reshape', version='0.8.9', upgrade='never'); \
    devtools::install_version('pROC', version='1.18.0', upgrade='never'); \
    devtools::install_version('ggdendro', version='0.1.23', upgrade='never'); \
    devtools::install_version('kernlab', version='0.9-30', upgrade='never'); \
    devtools::install_version('mclust', version='5.4.9', upgrade='never'); \
    devtools::install_version('trimcluster', version='0.1-5', upgrade='never'); \
    devtools::install_version('fpc', version='2.2-9', upgrade='never'); \
    devtools::install_version('dendextend', version='1.15.2', upgrade='never'); \
    devtools::install_version('ggseqlogo', version='0.1', upgrade='never'); \
    devtools::install_version('gtools', version='3.9.2', upgrade='never'); \
    devtools::install_version('ggbeeswarm', version='0.6.0', upgrade='never'); \
    devtools::install_version('hues', version='0.2.0', upgrade='never'); \
    devtools::install_version('Rtsne', version='0.16', upgrade='never'); \
    devtools::install_version('VGAM', version='1.1-6', upgrade='never'); \
    devtools::install_version('mda', version='0.5-3', upgrade='never'); \
    devtools::install_version('earth', version='5.3.1', upgrade='never'); \
    devtools::install_version('e1071', version='1.7-9', upgrade='never'); \
    devtools::install_version('nnet', version='7.3-17', upgrade='never'); \
    devtools::install_version('randomForest', version='4.7-1', upgrade='never'); \
    devtools::install_version('klaR', version='1.7-0', upgrade='never'); \
    devtools::install_version('caret', version='6.0-92', upgrade='never'); \
    devtools::install_version('XML', version='3.99-0.9', upgrade='never'); \
    BiocManager::install('rhdf5', version='3.14', update=FALSE); \
    BiocManager::install('BSgenome', version='3.14', update=FALSE); \
    BiocManager::install('rtracklayer', version='3.14', update=FALSE); \
    devtools::install_version('progress', version='1.2.2', upgrade='never'); \
    devtools::install_version('dbscan', version='1.1-10', upgrade='never'); \
"

# Install perl modules for meme
export PERL_MM_USE_DEFAULT=1                     # Remove potential prompt
export PERL_EXTUTILS_AUTOINSTALL="--defaultdeps" # Remove potential prompt
perl -MCPAN -e 'install HTML::Template'
perl -MCPAN -e 'install XML::Simple'
perl -MCPAN -e 'install XML::Compile::SOAP11'
perl -MCPAN -e 'install XML::Compile::WSDL11'
perl -MCPAN -e 'install XML::Compile::Transport::SOAPHTTP'
perl -MCPAN -e 'install Log::Log4perl'
perl -MCPAN -e 'install Math::CDF'
# perl -MCPAN -e 'install JSON' # Done with apt-get
# perl -MCPAN -e 'install HTML::Treebuilder' # Done with apt-get

# Install meme version 4.11.4
wget http://meme-suite.org/meme-software/4.11.4/meme_4.11.4_1.tar.gz
tar xvf meme_4.11.4_1.tar.gz && rm meme_4.11.4_1.tar.gz
cd meme_4.11.4

mkdir build
./configure --prefix=/meme_4.11.4/build
sed -i 's/\/usr\/bin\/mpirun -np/\/usr\/bin\/mpirun --allow-run-as-root -np/g' config.status # Allow OpenMPI to run in Docker's default root environment
sed -i 's/\/usr\/bin\/mpirun/\/usr\/bin\/mpirun --allow-run-as-root/g' config.status # Allow OpenMPI to run in Docker's default root environment
make
# make test # Not needed
make install
cp /meme_4.11.4/build/bin/meme /usr/bin/meme
mkdir -p /etc/libibverbs.d # Fix one OpenMPI warning 

cd ..

# Install bedtools version 2.30.0
wget https://github.com/arq5x/bedtools2/releases/download/v2.30.0/bedtools-2.30.0.tar.gz
tar xvf bedtools-2.30.0.tar.gz && rm bedtools-2.30.0.tar.gz
cd bedtools2
make
cp /bedtools2/bin/bedtools /usr/bin/bedtools

cd ..

